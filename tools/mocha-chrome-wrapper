#!/usr/bin/env node

// Copyright (c) 2017 Google Inc. All rights reserved.
// This code may only be used under the BSD style license found at
// http://polymer.github.io/LICENSE.txt
// Code distributed by Google as part of this project is also
// subject to an additional IP rights grant found at
// http://polymer.github.io/PATENTS.txt

'use strict';
const MochaChrome = require('mocha-chrome');
const fs = require('fs');

let promises = process.argv.slice(2).map(testScript => {
  // we're not doing a ton of checking for now, since we've relied on
  // shell globs to populate the parameter list with valid files in the only
  // caller we care about for now (npm test).
  let url = 'file://'+fs.realpathSync(testScript);

  const options = Object.assign({
    url: url
  });

  const mochaChrome = new MochaChrome(options);


  let promise = new Promise(async (resolve) => {
    // 'ended' seems like the preferred event, but let's catch everything
    // that the mocha-chrome cli does.
    mochaChrome.on('ended', stats => {
      resolve(stats.failures);
    });
    mochaChrome.on('failure', message => {
      resolve(1);
    });

    console.log('running tests at: '+options.url);
    await mochaChrome.connect();
    await mochaChrome.run();
  });
  return promise;
});
Promise.all(promises).then((values) => {
  let exitCode = values.reduce(
    (accumulator, currentValue) => accumulator|=currentValue
  );
  process.exit(exitCode);
});
